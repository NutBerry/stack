'use strict';

const assert = require('assert');
const { HydratedRuntime, Constants } = require('./../../utils/');
const { arrayify } = require('./../helpers/utils');

/* eslint-disable max-len */
// the really long-running task
const data = arrayify(
  '0x686109bb0000000000000000000000000000000000003ffffffffffffeffffffffffffff0000000000000000000000000000000000000000000000000000000000003039'
);

//const data =
//  '0x686109bb00000000000000000003c06a5bdb1dd7dcf5ca96b974ab2b4ae19f9972ca019d000000000000000000000000000000000000000000000000000000000000007b';

// PrimeTester contract
const code = arrayify(
  '0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630c78932d1461006757806327e916c31461009357806333f1600a1461009b578063686109bb146100a35780638be1baee146100c6578063df5c127e146100ce575b600080fd5b61006f6100d6565b6040518082600481111561007f57fe5b60ff16815260200191505060405180910390f35b61006f6100db565b61006f6100e0565b61006f600480360360408110156100b957600080fd5b50803590602001356100e5565b61006f6101cf565b61006f6101d4565b600281565b600081565b600381565b600060288315806100f65750836001145b806101015750836004145b156101105760009150506101c9565b836002148061011f5750836003145b1561012e5760049150506101c9565b60001984015b6001811615156101465760011c610134565b6000610151856101d9565b905060005b838110156101c05760008061016c858a86610202565b909250905080151561018757600296505050505050506101c9565b81151561019d57600096505050505050506101c9565b50506158f991909102600781901c18620118c702600b81901c1890600101610156565b50600393505050505b92915050565b600481565b600181565b604080516020808201849052825180830382018152918301909252805191012060001c5b919050565b60008060018086161461021157fe5b846001850381151561021f57fe5b061561022757fe5b6000856001860381151561023757fe5b0490506102438161037d565b151561024b57fe5b600181101561025657fe5b600485101561026c576000809250925050610375565b6000600486038581151561027c57fe5b066002019050600061028f82898961039c565b945090508315156102a95760008094509450505050610375565b80600114806102ba57506001870381145b156102ce5760018094509450505050610375565b60001987018814610369576102e38182610454565b945090508315156102fd5760008094509450505050610375565b868181151561030857fe5b069050610316886002610454565b90985093508315156103315760008094509450505050610375565b806001141561034a576000600194509450505050610375565b600187038114156103645760018094509450505050610375565b6102ce565b60006001945094505050505b935093915050565b600081151561038e575060006101fd565b5060001981018116156101fd565b6000808215156103b157506000905080610375565b600083868115156103be57fe5b069550600192505b600085111561044757600185161561040a576103e28387610454565b90935090508015156103fb575060009150819050610375565b838381151561040657fe5b0692505b6104148687610454565b909650905080151561042d575060009150819050610375565b838681151561043857fe5b069550600185901c94506103c6565b6001915050935093915050565b60008083151561046a5750600090506001610492565b83830283858281151561047957fe5b04141561048b57915060019050610492565b9150600090505b925092905056fea165627a7a72305820cf95159c84ed2253d37b8acf6ea2b6a17f8f0117b0fa754ffeec62324898a8940029'
);
/* eslint-enable max-len */

describe('PrimeTester', function () {
  this.timeout(180000);

  it('should not go out of memory', async () => {
    const stepper = new HydratedRuntime();
    const steps = await stepper.run({ code, data });
    const res = steps[steps.length - 1];

    console.log({ executionSteps: steps.length });
  });
});
